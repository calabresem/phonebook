.286
assume cs:cseg,ds:cseg,es:cseg,ss:cseg
cseg segment para public 'Empty'
org 100h
mp proc near

;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
; PRINT COPYRIGHT
	mov dx,offset copy_r
	call p_t

	mov bx,55h
p1:	mov cx,0h
p2:	loop p2
	dec bx
	jnz p1

;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
; OPEN DATA FILE

	mov ax,3d02h			; Abrir archivo de datos
	mov dx,offset file
	int 21h
	jnc open_file
	mov byte ptr [flag1],1
	jmp main_menu

open_file:
	mov fh,ax
	mov bx,fh
	call fp_st
	mov bx,fh
	mov ah,3fh			; Leer header
	mov cx,3
	mov dx,offset got_h
	int 21h

	mov si,offset head_		; Es valido?
	mov di,offset got_h
	mov cx,3
	rep cmpsb
	je head_ok			; Si, seguir...
	mov dx,offset err_1		; No mostrar error
	call p_t

err_f:	mov al,01h
	mov ah,4ch
	int 21h

head_ok:
	mov dx,offset stat_1
	call p_t
	mov bx,fh
	mov ah,3fh			; Leer numero de
	mov cx,1			; items
	mov dx,offset n_items
	int 21h

	mov ah,3fh
	mov cx,5000
	mov dx,offset buf
	int 21h

;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
; DISPLAY MAIN MENU
main_menu:
	call csr_
	call clear_b
	mov dx,offset menu_1
	call p_t

key_loop:
	mov ah,02h			; Posicionar cursor
	mov dh,9
	mov dl,16
	int 10h

	call wait_key			; Pedir tecla
	mov dl,al
	mov ah,02h
	int 21h
	cmp al,'A'
	je add_
	cmp al,'a'
	je add_
	cmp al,'D'
	je show_
	cmp al,'d'
	je show_
	cmp al,'S'
	je look_
	cmp al,'s'
	je look_
	cmp al,'E'
	je del_
	cmp al,'e'
	je del_
	cmp al,'P'
	je print_
	cmp al,'p'
	je print_
	cmp al,'Q'
	je done
	cmp al,'q'
	jne key_loop

done:	xor ax,ax
	call save_info
	call csr_
	mov dx,offset bye_
	call p_t
	mov dx,offset down_
	call p_t
	mov ax,4c00h
	int 21h

;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
; ADD AN ITEM
add_:
	call add_item
	jmp main_menu

;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
; SHOW ALL ITEMS
show_:
	call show_it
	jmp main_menu

;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
; LOOK FOR ITEM	
look_:
	call look_4_it
	jmp main_menu

;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
del_:
	call del_it
	jmp main_menu

;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
print_:
	call p_item
	jmp main_menu

;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

	include calls.dat
	include data.dat

mp endp
cseg ends
end mp